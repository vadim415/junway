version: '3.3'
services:
  #Nginx Service
  #postgres:
  db:
    container_name: db
    #image: postgres
    image: postgres:12-alpine
    restart: always
    environment: 
     # - DATABASE_HOST=0.0.0.0
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mypasswordE3341v
      - POSTGRES_DB=db_app  
    #command: echo "host   all    all  0.0.0.0/24  trust" >> /var/lib/postgresql/data/pg_hba.conf
    ports: 
      - "5432:5432"
    volumes: 
      - db-datar53:/var/lib/postgresql/data
      #- ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql  
    networks:
      - app-network
  app:
    container_name: app
    build: .
      #context: .
      #dockerfile: Dockerfile
    image: webapp:tag134
    restart: always
    # build from Dockerfile
    #context: ./Dockerfile
    #dockerfile: Dockerfile
    ports:
     - "8000:8000"
    #volumes:
     #- ./django_blog/:/home 
    #command: python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py collectstatic && python3 manage.py runserver 0.0.0.0:8000
    command: python3 manage.py runserver 0.0.0.0:8000
    #command: ls -la
    networks:
      - app-network
    depends_on:
     - db
 # web:
 #   build: .
 #    context: ./test2/nginx/Dockerfile
 #   container_name: webserver
 #   restart: unless-stopped
 #   tty: true
 #   ports:
 #     - "80:8080"
 #     - "443:443"
 #   networks:
 #     - app-network
volumes:
  db-datar53:
  #django_blog:
#driver: local
#Docker Networks
networks:
  app-network:
    driver: bridge
